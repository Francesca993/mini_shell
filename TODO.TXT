ho iniziato a creare la funzione che gestisce i backslash ma c'è un problema con lexer che non ho avuto
tempo di risolvere.

echo "a\
b"


minishell$: 
francesca@Mac mini_shell % a\ b
zsh: command not found: a b
francesca@Mac mini_shell % ./minishell 
minishell$: a\ b
=== TOKENS ===
[a\] -> WORD
[b] -> WORD
==============
=== PIPELINE ===
Command 1:
  args: [a] [b] 
------------------------
=== END OF PIPELINE ===
minishell$: a\ a\ a\ a\
=== TOKENS ===
[a\] -> WORD
[a\] -> WORD
[a\] -> WORD
[a\] -> WORD
==============
=== PIPELINE ===
Command 1:
  args: [a] [a] [a] [a] 
------------------------
=== END OF PIPELINE ===
minishell$: 

==============
TEST
==============
| Input      | Output   |
| ---------- | -------- |
| `a\z`      | `az`     |
| `a\\z`     | `a\z`    |
| `a\\\z`    | `a\z`    |
| `\\\\`     | `\`      |
| `a\\\b\\c` | `a\bc`   |
| `\\hello`  | `\hello` |
| `\a\b\c`   | `abc`    |

| Input       | Comportamento                |
| ----------- | ---------------------------- |
| `a\ b`      | → OK, token = `a b`          |
| `a\`        | → ❌ errore                   |
| `"a\"b"`    | → OK, token = `a"b`          |
| `"a\`       | → ❌ errore: quote non chiusa |
| `echo a\\b` | → OK, token = `a\b`          |
echo a\
b              → OK, output: a b (il newline è ignorato)


